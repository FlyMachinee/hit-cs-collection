#pragma once

#define NONE -1//定义按钮空ID

enum GAME_IMG{
    BLANK=9, FLAG, QUESTION, MINE, BLOOD, MISTAKE, SMILE, SURPRISE, DEAD, WIN
};
//枚举图片对应图片数组的下标值，便于使用

#include <graphics.h>
#include <windows.h>
#include <stdio.h>
#include <string.h>
#include "calc.h"

//===================================================
//函数名：LoadButtonImage
//功能：创建并加载按钮会使用到的图片
//输入参数：存放按钮图片的数组(PIMAGE*)
//返回值：无
//===================================================
void LoadButtonImage(PIMAGE* img_array);

//===================================================
//函数名：LoadGameImage
//功能：创建并加载游戏中会使用到的图片
//输入参数：存放游戏图片的数组(PIMAGE*)
//返回值：无
//===================================================
void LoadGameImage(PIMAGE* img_array);

//===================================================
//函数名：ReleaseImage
//功能：释放图片数组的内存
//输入参数：需要释放的图片数组(PIMAGE*)，图片数量(int)
//返回值：无
//===================================================
void ReleaseImage(PIMAGE* img_array, int n);

//===================================================
//函数名：SaveGame
//功能：保存当前未完成的游戏
//输入参数：地图信息结构体的指针(MAP_INFO*)，地图本身(BLOCK(*)[32])
//返回值：0为保存成功，1为保存失败
//===================================================
int SaveGame(const MAP_INFO* map_info, const BLOCK board[][32]);

//===================================================
//函数名：LoadSave
//功能：加载存档信息
//输入参数：地图信息结构体的指针(MAP_INFO*)，地图本身(BLOCK(*)[32])
//返回值：0为加载成功，1为加载失败
//===================================================
int LoadSave(MAP_INFO* map_info, BLOCK board[][32]);

//===================================================
//函数名：RankUpdate
//功能：尝试更新排名信息
//输入参数：排名信息数组(RANK_INFO*)，地图信息结构体的指针(MAP_INFO*)，所用时间(int)
//返回值：无
//===================================================
void RankUpdate(RANK_INFO rank_info[3], const MAP_INFO* pmap_info, int time);

//===================================================
//函数名：LoadRank
//功能：加载排名信息
//输入参数：排名信息数组(RANK_INFO*)
//返回值：无
//===================================================
void LoadRank(RANK_INFO* rank_info);

//===================================================
//函数名：SaveRank
//功能：保存排名信息
//输入参数：排名信息数组(RANK_INFO*)
//返回值：无
//===================================================
void SaveRank(RANK_INFO* rank_info);
